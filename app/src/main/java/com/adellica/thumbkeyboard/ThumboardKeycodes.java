package com.adellica.thumbkeyboard;

import android.view.KeyEvent;

/**
 * Created by klm on 9/28/16.
 */
public class ThumboardKeycodes {
    public static int string2keycode(String s) {
        if("UNKNOWN".equals(s)) return KeyEvent.KEYCODE_UNKNOWN;
        else if("SOFT_LEFT".equals(s)) return KeyEvent.KEYCODE_SOFT_LEFT;
        else if("SOFT_RIGHT".equals(s)) return KeyEvent.KEYCODE_SOFT_RIGHT;
        else if("HOME".equals(s)) return KeyEvent.KEYCODE_HOME;
        else if("BACK".equals(s)) return KeyEvent.KEYCODE_BACK;
        else if("CALL".equals(s)) return KeyEvent.KEYCODE_CALL;
        else if("ENDCALL".equals(s)) return KeyEvent.KEYCODE_ENDCALL;
        else if("0".equals(s)) return KeyEvent.KEYCODE_0;
        else if("1".equals(s)) return KeyEvent.KEYCODE_1;
        else if("2".equals(s)) return KeyEvent.KEYCODE_2;
        else if("3".equals(s)) return KeyEvent.KEYCODE_3;
        else if("4".equals(s)) return KeyEvent.KEYCODE_4;
        else if("5".equals(s)) return KeyEvent.KEYCODE_5;
        else if("6".equals(s)) return KeyEvent.KEYCODE_6;
        else if("7".equals(s)) return KeyEvent.KEYCODE_7;
        else if("8".equals(s)) return KeyEvent.KEYCODE_8;
        else if("9".equals(s)) return KeyEvent.KEYCODE_9;
        else if("STAR".equals(s)) return KeyEvent.KEYCODE_STAR;
        else if("POUND".equals(s)) return KeyEvent.KEYCODE_POUND;
        else if("DPAD_UP".equals(s)) return KeyEvent.KEYCODE_DPAD_UP;
        else if("DPAD_DOWN".equals(s)) return KeyEvent.KEYCODE_DPAD_DOWN;
        else if("DPAD_LEFT".equals(s)) return KeyEvent.KEYCODE_DPAD_LEFT;
        else if("DPAD_RIGHT".equals(s)) return KeyEvent.KEYCODE_DPAD_RIGHT;
        else if("DPAD_CENTER".equals(s)) return KeyEvent.KEYCODE_DPAD_CENTER;
        else if("VOLUME_UP".equals(s)) return KeyEvent.KEYCODE_VOLUME_UP;
        else if("VOLUME_DOWN".equals(s)) return KeyEvent.KEYCODE_VOLUME_DOWN;
        else if("POWER".equals(s)) return KeyEvent.KEYCODE_POWER;
        else if("CAMERA".equals(s)) return KeyEvent.KEYCODE_CAMERA;
        else if("CLEAR".equals(s)) return KeyEvent.KEYCODE_CLEAR;
        else if("A".equals(s)) return KeyEvent.KEYCODE_A;
        else if("B".equals(s)) return KeyEvent.KEYCODE_B;
        else if("C".equals(s)) return KeyEvent.KEYCODE_C;
        else if("D".equals(s)) return KeyEvent.KEYCODE_D;
        else if("E".equals(s)) return KeyEvent.KEYCODE_E;
        else if("F".equals(s)) return KeyEvent.KEYCODE_F;
        else if("G".equals(s)) return KeyEvent.KEYCODE_G;
        else if("H".equals(s)) return KeyEvent.KEYCODE_H;
        else if("I".equals(s)) return KeyEvent.KEYCODE_I;
        else if("J".equals(s)) return KeyEvent.KEYCODE_J;
        else if("K".equals(s)) return KeyEvent.KEYCODE_K;
        else if("L".equals(s)) return KeyEvent.KEYCODE_L;
        else if("M".equals(s)) return KeyEvent.KEYCODE_M;
        else if("N".equals(s)) return KeyEvent.KEYCODE_N;
        else if("O".equals(s)) return KeyEvent.KEYCODE_O;
        else if("P".equals(s)) return KeyEvent.KEYCODE_P;
        else if("Q".equals(s)) return KeyEvent.KEYCODE_Q;
        else if("R".equals(s)) return KeyEvent.KEYCODE_R;
        else if("S".equals(s)) return KeyEvent.KEYCODE_S;
        else if("T".equals(s)) return KeyEvent.KEYCODE_T;
        else if("U".equals(s)) return KeyEvent.KEYCODE_U;
        else if("V".equals(s)) return KeyEvent.KEYCODE_V;
        else if("W".equals(s)) return KeyEvent.KEYCODE_W;
        else if("X".equals(s)) return KeyEvent.KEYCODE_X;
        else if("Y".equals(s)) return KeyEvent.KEYCODE_Y;
        else if("Z".equals(s)) return KeyEvent.KEYCODE_Z;
        else if("COMMA".equals(s)) return KeyEvent.KEYCODE_COMMA;
        else if("PERIOD".equals(s)) return KeyEvent.KEYCODE_PERIOD;
        else if("ALT_LEFT".equals(s)) return KeyEvent.KEYCODE_ALT_LEFT;
        else if("ALT_RIGHT".equals(s)) return KeyEvent.KEYCODE_ALT_RIGHT;
        else if("SHIFT_LEFT".equals(s)) return KeyEvent.KEYCODE_SHIFT_LEFT;
        else if("SHIFT_RIGHT".equals(s)) return KeyEvent.KEYCODE_SHIFT_RIGHT;
        else if("TAB".equals(s)) return KeyEvent.KEYCODE_TAB;
        else if("SPACE".equals(s)) return KeyEvent.KEYCODE_SPACE;
        else if("SYM".equals(s)) return KeyEvent.KEYCODE_SYM;
        else if("EXPLORER".equals(s)) return KeyEvent.KEYCODE_EXPLORER;
        else if("ENVELOPE".equals(s)) return KeyEvent.KEYCODE_ENVELOPE;
        else if("ENTER".equals(s)) return KeyEvent.KEYCODE_ENTER;
        else if("DEL".equals(s)) return KeyEvent.KEYCODE_DEL;
        else if("GRAVE".equals(s)) return KeyEvent.KEYCODE_GRAVE;
        else if("MINUS".equals(s)) return KeyEvent.KEYCODE_MINUS;
        else if("EQUALS".equals(s)) return KeyEvent.KEYCODE_EQUALS;
        else if("LEFT_BRACKET".equals(s)) return KeyEvent.KEYCODE_LEFT_BRACKET;
        else if("RIGHT_BRACKET".equals(s)) return KeyEvent.KEYCODE_RIGHT_BRACKET;
        else if("BACKSLASH".equals(s)) return KeyEvent.KEYCODE_BACKSLASH;
        else if("SEMICOLON".equals(s)) return KeyEvent.KEYCODE_SEMICOLON;
        else if("APOSTROPHE".equals(s)) return KeyEvent.KEYCODE_APOSTROPHE;
        else if("SLASH".equals(s)) return KeyEvent.KEYCODE_SLASH;
        else if("AT".equals(s)) return KeyEvent.KEYCODE_AT;
        else if("NUM".equals(s)) return KeyEvent.KEYCODE_NUM;
        else if("HEADSETHOOK".equals(s)) return KeyEvent.KEYCODE_HEADSETHOOK;
        else if("FOCUS".equals(s)) return KeyEvent.KEYCODE_FOCUS;
        else if("PLUS".equals(s)) return KeyEvent.KEYCODE_PLUS;
        else if("MENU".equals(s)) return KeyEvent.KEYCODE_MENU;
        else if("NOTIFICATION".equals(s)) return KeyEvent.KEYCODE_NOTIFICATION;
        else if("SEARCH".equals(s)) return KeyEvent.KEYCODE_SEARCH;
        else if("MEDIA_PLAY_PAUSE".equals(s)) return KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE;
        else if("MEDIA_STOP".equals(s)) return KeyEvent.KEYCODE_MEDIA_STOP;
        else if("MEDIA_NEXT".equals(s)) return KeyEvent.KEYCODE_MEDIA_NEXT;
        else if("MEDIA_PREVIOUS".equals(s)) return KeyEvent.KEYCODE_MEDIA_PREVIOUS;
        else if("MEDIA_REWIND".equals(s)) return KeyEvent.KEYCODE_MEDIA_REWIND;
        else if("MEDIA_FAST_FORWARD".equals(s)) return KeyEvent.KEYCODE_MEDIA_FAST_FORWARD;
        else if("MUTE".equals(s)) return KeyEvent.KEYCODE_MUTE;
        else if("PAGE_UP".equals(s)) return KeyEvent.KEYCODE_PAGE_UP;
        else if("PAGE_DOWN".equals(s)) return KeyEvent.KEYCODE_PAGE_DOWN;
        else if("PICTSYMBOLS".equals(s)) return KeyEvent.KEYCODE_PICTSYMBOLS;
        else if("SWITCH_CHARSET".equals(s)) return KeyEvent.KEYCODE_SWITCH_CHARSET;
        else if("BUTTON_A".equals(s)) return KeyEvent.KEYCODE_BUTTON_A;
        else if("BUTTON_B".equals(s)) return KeyEvent.KEYCODE_BUTTON_B;
        else if("BUTTON_C".equals(s)) return KeyEvent.KEYCODE_BUTTON_C;
        else if("BUTTON_X".equals(s)) return KeyEvent.KEYCODE_BUTTON_X;
        else if("BUTTON_Y".equals(s)) return KeyEvent.KEYCODE_BUTTON_Y;
        else if("BUTTON_Z".equals(s)) return KeyEvent.KEYCODE_BUTTON_Z;
        else if("BUTTON_L1".equals(s)) return KeyEvent.KEYCODE_BUTTON_L1;
        else if("BUTTON_R1".equals(s)) return KeyEvent.KEYCODE_BUTTON_R1;
        else if("BUTTON_L2".equals(s)) return KeyEvent.KEYCODE_BUTTON_L2;
        else if("BUTTON_R2".equals(s)) return KeyEvent.KEYCODE_BUTTON_R2;
        else if("BUTTON_THUMBL".equals(s)) return KeyEvent.KEYCODE_BUTTON_THUMBL;
        else if("BUTTON_THUMBR".equals(s)) return KeyEvent.KEYCODE_BUTTON_THUMBR;
        else if("BUTTON_START".equals(s)) return KeyEvent.KEYCODE_BUTTON_START;
        else if("BUTTON_SELECT".equals(s)) return KeyEvent.KEYCODE_BUTTON_SELECT;
        else if("BUTTON_MODE".equals(s)) return KeyEvent.KEYCODE_BUTTON_MODE;
        else if("ESCAPE".equals(s)) return KeyEvent.KEYCODE_ESCAPE;
        else if("FORWARD_DEL".equals(s)) return KeyEvent.KEYCODE_FORWARD_DEL;
        else if("CTRL_LEFT".equals(s)) return KeyEvent.KEYCODE_CTRL_LEFT;
        else if("CTRL_RIGHT".equals(s)) return KeyEvent.KEYCODE_CTRL_RIGHT;
        else if("CAPS_LOCK".equals(s)) return KeyEvent.KEYCODE_CAPS_LOCK;
        else if("SCROLL_LOCK".equals(s)) return KeyEvent.KEYCODE_SCROLL_LOCK;
        else if("META_LEFT".equals(s)) return KeyEvent.KEYCODE_META_LEFT;
        else if("META_RIGHT".equals(s)) return KeyEvent.KEYCODE_META_RIGHT;
        else if("FUNCTION".equals(s)) return KeyEvent.KEYCODE_FUNCTION;
        else if("SYSRQ".equals(s)) return KeyEvent.KEYCODE_SYSRQ;
        else if("BREAK".equals(s)) return KeyEvent.KEYCODE_BREAK;
        else if("MOVE_HOME".equals(s)) return KeyEvent.KEYCODE_MOVE_HOME;
        else if("MOVE_END".equals(s)) return KeyEvent.KEYCODE_MOVE_END;
        else if("INSERT".equals(s)) return KeyEvent.KEYCODE_INSERT;
        else if("FORWARD".equals(s)) return KeyEvent.KEYCODE_FORWARD;
        else if("MEDIA_PLAY".equals(s)) return KeyEvent.KEYCODE_MEDIA_PLAY;
        else if("MEDIA_PAUSE".equals(s)) return KeyEvent.KEYCODE_MEDIA_PAUSE;
        else if("MEDIA_CLOSE".equals(s)) return KeyEvent.KEYCODE_MEDIA_CLOSE;
        else if("MEDIA_EJECT".equals(s)) return KeyEvent.KEYCODE_MEDIA_EJECT;
        else if("MEDIA_RECORD".equals(s)) return KeyEvent.KEYCODE_MEDIA_RECORD;
        else if("F1".equals(s)) return KeyEvent.KEYCODE_F1;
        else if("F2".equals(s)) return KeyEvent.KEYCODE_F2;
        else if("F3".equals(s)) return KeyEvent.KEYCODE_F3;
        else if("F4".equals(s)) return KeyEvent.KEYCODE_F4;
        else if("F5".equals(s)) return KeyEvent.KEYCODE_F5;
        else if("F6".equals(s)) return KeyEvent.KEYCODE_F6;
        else if("F7".equals(s)) return KeyEvent.KEYCODE_F7;
        else if("F8".equals(s)) return KeyEvent.KEYCODE_F8;
        else if("F9".equals(s)) return KeyEvent.KEYCODE_F9;
        else if("F10".equals(s)) return KeyEvent.KEYCODE_F10;
        else if("F11".equals(s)) return KeyEvent.KEYCODE_F11;
        else if("F12".equals(s)) return KeyEvent.KEYCODE_F12;
        else if("NUM_LOCK".equals(s)) return KeyEvent.KEYCODE_NUM_LOCK;
        else if("NUMPAD_0".equals(s)) return KeyEvent.KEYCODE_NUMPAD_0;
        else if("NUMPAD_1".equals(s)) return KeyEvent.KEYCODE_NUMPAD_1;
        else if("NUMPAD_2".equals(s)) return KeyEvent.KEYCODE_NUMPAD_2;
        else if("NUMPAD_3".equals(s)) return KeyEvent.KEYCODE_NUMPAD_3;
        else if("NUMPAD_4".equals(s)) return KeyEvent.KEYCODE_NUMPAD_4;
        else if("NUMPAD_5".equals(s)) return KeyEvent.KEYCODE_NUMPAD_5;
        else if("NUMPAD_6".equals(s)) return KeyEvent.KEYCODE_NUMPAD_6;
        else if("NUMPAD_7".equals(s)) return KeyEvent.KEYCODE_NUMPAD_7;
        else if("NUMPAD_8".equals(s)) return KeyEvent.KEYCODE_NUMPAD_8;
        else if("NUMPAD_9".equals(s)) return KeyEvent.KEYCODE_NUMPAD_9;
        else if("NUMPAD_DIVIDE".equals(s)) return KeyEvent.KEYCODE_NUMPAD_DIVIDE;
        else if("NUMPAD_MULTIPLY".equals(s)) return KeyEvent.KEYCODE_NUMPAD_MULTIPLY;
        else if("NUMPAD_SUBTRACT".equals(s)) return KeyEvent.KEYCODE_NUMPAD_SUBTRACT;
        else if("NUMPAD_ADD".equals(s)) return KeyEvent.KEYCODE_NUMPAD_ADD;
        else if("NUMPAD_DOT".equals(s)) return KeyEvent.KEYCODE_NUMPAD_DOT;
        else if("NUMPAD_COMMA".equals(s)) return KeyEvent.KEYCODE_NUMPAD_COMMA;
        else if("NUMPAD_ENTER".equals(s)) return KeyEvent.KEYCODE_NUMPAD_ENTER;
        else if("NUMPAD_EQUALS".equals(s)) return KeyEvent.KEYCODE_NUMPAD_EQUALS;
        else if("NUMPAD_LEFT_PAREN".equals(s)) return KeyEvent.KEYCODE_NUMPAD_LEFT_PAREN;
        else if("NUMPAD_RIGHT_PAREN".equals(s)) return KeyEvent.KEYCODE_NUMPAD_RIGHT_PAREN;
        else if("VOLUME_MUTE".equals(s)) return KeyEvent.KEYCODE_VOLUME_MUTE;
        else if("INFO".equals(s)) return KeyEvent.KEYCODE_INFO;
        else if("CHANNEL_UP".equals(s)) return KeyEvent.KEYCODE_CHANNEL_UP;
        else if("CHANNEL_DOWN".equals(s)) return KeyEvent.KEYCODE_CHANNEL_DOWN;
        else if("ZOOM_IN".equals(s)) return KeyEvent.KEYCODE_ZOOM_IN;
        else if("ZOOM_OUT".equals(s)) return KeyEvent.KEYCODE_ZOOM_OUT;
        else if("TV".equals(s)) return KeyEvent.KEYCODE_TV;
        else if("WINDOW".equals(s)) return KeyEvent.KEYCODE_WINDOW;
        else if("GUIDE".equals(s)) return KeyEvent.KEYCODE_GUIDE;
        else if("DVR".equals(s)) return KeyEvent.KEYCODE_DVR;
        else if("BOOKMARK".equals(s)) return KeyEvent.KEYCODE_BOOKMARK;
        else if("CAPTIONS".equals(s)) return KeyEvent.KEYCODE_CAPTIONS;
        else if("SETTINGS".equals(s)) return KeyEvent.KEYCODE_SETTINGS;
        else if("TV_POWER".equals(s)) return KeyEvent.KEYCODE_TV_POWER;
        else if("TV_INPUT".equals(s)) return KeyEvent.KEYCODE_TV_INPUT;
        else if("STB_POWER".equals(s)) return KeyEvent.KEYCODE_STB_POWER;
        else if("STB_INPUT".equals(s)) return KeyEvent.KEYCODE_STB_INPUT;
        else if("AVR_POWER".equals(s)) return KeyEvent.KEYCODE_AVR_POWER;
        else if("AVR_INPUT".equals(s)) return KeyEvent.KEYCODE_AVR_INPUT;
        else if("PROG_RED".equals(s)) return KeyEvent.KEYCODE_PROG_RED;
        else if("PROG_GREEN".equals(s)) return KeyEvent.KEYCODE_PROG_GREEN;
        else if("PROG_YELLOW".equals(s)) return KeyEvent.KEYCODE_PROG_YELLOW;
        else if("PROG_BLUE".equals(s)) return KeyEvent.KEYCODE_PROG_BLUE;
        else if("APP_SWITCH".equals(s)) return KeyEvent.KEYCODE_APP_SWITCH;
        else if("BUTTON_1".equals(s)) return KeyEvent.KEYCODE_BUTTON_1;
        else if("BUTTON_2".equals(s)) return KeyEvent.KEYCODE_BUTTON_2;
        else if("BUTTON_3".equals(s)) return KeyEvent.KEYCODE_BUTTON_3;
        else if("BUTTON_4".equals(s)) return KeyEvent.KEYCODE_BUTTON_4;
        else if("BUTTON_5".equals(s)) return KeyEvent.KEYCODE_BUTTON_5;
        else if("BUTTON_6".equals(s)) return KeyEvent.KEYCODE_BUTTON_6;
        else if("BUTTON_7".equals(s)) return KeyEvent.KEYCODE_BUTTON_7;
        else if("BUTTON_8".equals(s)) return KeyEvent.KEYCODE_BUTTON_8;
        else if("BUTTON_9".equals(s)) return KeyEvent.KEYCODE_BUTTON_9;
        else if("BUTTON_10".equals(s)) return KeyEvent.KEYCODE_BUTTON_10;
        else if("BUTTON_11".equals(s)) return KeyEvent.KEYCODE_BUTTON_11;
        else if("BUTTON_12".equals(s)) return KeyEvent.KEYCODE_BUTTON_12;
        else if("BUTTON_13".equals(s)) return KeyEvent.KEYCODE_BUTTON_13;
        else if("BUTTON_14".equals(s)) return KeyEvent.KEYCODE_BUTTON_14;
        else if("BUTTON_15".equals(s)) return KeyEvent.KEYCODE_BUTTON_15;
        else if("BUTTON_16".equals(s)) return KeyEvent.KEYCODE_BUTTON_16;
        else if("LANGUAGE_SWITCH".equals(s)) return KeyEvent.KEYCODE_LANGUAGE_SWITCH;
        else if("MANNER_MODE".equals(s)) return KeyEvent.KEYCODE_MANNER_MODE;
        else if("3D_MODE".equals(s)) return KeyEvent.KEYCODE_3D_MODE;
        else if("CONTACTS".equals(s)) return KeyEvent.KEYCODE_CONTACTS;
        else if("CALENDAR".equals(s)) return KeyEvent.KEYCODE_CALENDAR;
        else if("MUSIC".equals(s)) return KeyEvent.KEYCODE_MUSIC;
        else if("CALCULATOR".equals(s)) return KeyEvent.KEYCODE_CALCULATOR;
        else if("ZENKAKU_HANKAKU".equals(s)) return KeyEvent.KEYCODE_ZENKAKU_HANKAKU;
        else if("EISU".equals(s)) return KeyEvent.KEYCODE_EISU;
        else if("MUHENKAN".equals(s)) return KeyEvent.KEYCODE_MUHENKAN;
        else if("HENKAN".equals(s)) return KeyEvent.KEYCODE_HENKAN;
        else if("KATAKANA_HIRAGANA".equals(s)) return KeyEvent.KEYCODE_KATAKANA_HIRAGANA;
        else if("YEN".equals(s)) return KeyEvent.KEYCODE_YEN;
        else if("RO".equals(s)) return KeyEvent.KEYCODE_RO;
        else if("KANA".equals(s)) return KeyEvent.KEYCODE_KANA;
        else if("ASSIST".equals(s)) return KeyEvent.KEYCODE_ASSIST;
        else if("BRIGHTNESS_DOWN".equals(s)) return KeyEvent.KEYCODE_BRIGHTNESS_DOWN;
        else if("BRIGHTNESS_UP".equals(s)) return KeyEvent.KEYCODE_BRIGHTNESS_UP;
        else if("MEDIA_AUDIO_TRACK".equals(s)) return KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK;
        else if("SLEEP".equals(s)) return KeyEvent.KEYCODE_SLEEP;
        else if("WAKEUP".equals(s)) return KeyEvent.KEYCODE_WAKEUP;
        else if("PAIRING".equals(s)) return KeyEvent.KEYCODE_PAIRING;
        else if("MEDIA_TOP_MENU".equals(s)) return KeyEvent.KEYCODE_MEDIA_TOP_MENU;
        else if("11".equals(s)) return KeyEvent.KEYCODE_11;
        else if("12".equals(s)) return KeyEvent.KEYCODE_12;
        else if("LAST_CHANNEL".equals(s)) return KeyEvent.KEYCODE_LAST_CHANNEL;
        else if("TV_DATA_SERVICE".equals(s)) return KeyEvent.KEYCODE_TV_DATA_SERVICE;
        else if("VOICE_ASSIST".equals(s)) return KeyEvent.KEYCODE_VOICE_ASSIST;
        else if("TV_RADIO_SERVICE".equals(s)) return KeyEvent.KEYCODE_TV_RADIO_SERVICE;
        else if("TV_TELETEXT".equals(s)) return KeyEvent.KEYCODE_TV_TELETEXT;
        else if("TV_NUMBER_ENTRY".equals(s)) return KeyEvent.KEYCODE_TV_NUMBER_ENTRY;
        else if("TV_TERRESTRIAL_ANALOG".equals(s)) return KeyEvent.KEYCODE_TV_TERRESTRIAL_ANALOG;
        else if("TV_TERRESTRIAL_DIGITAL".equals(s)) return KeyEvent.KEYCODE_TV_TERRESTRIAL_DIGITAL;
        else if("TV_SATELLITE".equals(s)) return KeyEvent.KEYCODE_TV_SATELLITE;
        else if("TV_SATELLITE_BS".equals(s)) return KeyEvent.KEYCODE_TV_SATELLITE_BS;
        else if("TV_SATELLITE_CS".equals(s)) return KeyEvent.KEYCODE_TV_SATELLITE_CS;
        else if("TV_SATELLITE_SERVICE".equals(s)) return KeyEvent.KEYCODE_TV_SATELLITE_SERVICE;
        else if("TV_NETWORK".equals(s)) return KeyEvent.KEYCODE_TV_NETWORK;
        else if("TV_ANTENNA_CABLE".equals(s)) return KeyEvent.KEYCODE_TV_ANTENNA_CABLE;
        else if("TV_INPUT_HDMI_1".equals(s)) return KeyEvent.KEYCODE_TV_INPUT_HDMI_1;
        else if("TV_INPUT_HDMI_2".equals(s)) return KeyEvent.KEYCODE_TV_INPUT_HDMI_2;
        else if("TV_INPUT_HDMI_3".equals(s)) return KeyEvent.KEYCODE_TV_INPUT_HDMI_3;
        else if("TV_INPUT_HDMI_4".equals(s)) return KeyEvent.KEYCODE_TV_INPUT_HDMI_4;
        else if("TV_INPUT_COMPOSITE_1".equals(s)) return KeyEvent.KEYCODE_TV_INPUT_COMPOSITE_1;
        else if("TV_INPUT_COMPOSITE_2".equals(s)) return KeyEvent.KEYCODE_TV_INPUT_COMPOSITE_2;
        else if("TV_INPUT_COMPONENT_1".equals(s)) return KeyEvent.KEYCODE_TV_INPUT_COMPONENT_1;
        else if("TV_INPUT_COMPONENT_2".equals(s)) return KeyEvent.KEYCODE_TV_INPUT_COMPONENT_2;
        else if("TV_INPUT_VGA_1".equals(s)) return KeyEvent.KEYCODE_TV_INPUT_VGA_1;
        else if("TV_AUDIO_DESCRIPTION".equals(s)) return KeyEvent.KEYCODE_TV_AUDIO_DESCRIPTION;
        else if("TV_AUDIO_DESCRIPTION_MIX_UP".equals(s)) return KeyEvent.KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP;
        else if("TV_AUDIO_DESCRIPTION_MIX_DOWN".equals(s)) return KeyEvent.KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN;
        else if("TV_ZOOM_MODE".equals(s)) return KeyEvent.KEYCODE_TV_ZOOM_MODE;
        else if("TV_CONTENTS_MENU".equals(s)) return KeyEvent.KEYCODE_TV_CONTENTS_MENU;
        else if("TV_MEDIA_CONTEXT_MENU".equals(s)) return KeyEvent.KEYCODE_TV_MEDIA_CONTEXT_MENU;
        else if("TV_TIMER_PROGRAMMING".equals(s)) return KeyEvent.KEYCODE_TV_TIMER_PROGRAMMING;
        else if("HELP".equals(s)) return KeyEvent.KEYCODE_HELP;
        else return 0;
    }
}
